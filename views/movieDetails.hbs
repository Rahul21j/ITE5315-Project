<style>
    .movie-poster {
      max-width: 100%;
      height: auto;
    }
    .movie-info h2 {
      color: #333;
    }
    .movie-info p {
      color: #666;
      margin-bottom: 0.8rem;
    }
    .card-body {
        padding: 0.25rem;
    }
</style>

<div class="container pt-3">
    <div class="row justify-content-center">
        <div class="col-md-10">
            {{#each movies}}
              {{#if this.title}}
                  <div class="card mb-4">
                      <div class="card-header bg-success text-white">
                          <h3 class="text-center">{{ this.title }} ({{ this.year }})</h3>
                      </div>
                      <div class="card-body">
                          <div class="row">
                              <div class="col-md-4">
                                  <img src="{{ this.poster }}" alt="Movie Poster" class="movie-poster" onerror="this.onerror=null;this.src='https://img.freepik.com/free-photo/view-3d-cinema-elements_23-2150720822.jpg';">
                              </div>
                              <div class="col-md-8 movie-info">
                                  <p><strong>Plot:</strong> {{ this.plot }}</p>
                                  {{!-- <p><strong>Genres:</strong> {{ this.genres.join(', ') }}</p> --}}
                                  <p><strong>Runtime:</strong> {{ this.runtime }} minutes</p>
                                  {{!-- <p><strong>Cast:</strong> {{ this.cast.join(', ') }}</p> --}}
                                  {{!-- <p><strong>Language:</strong> {{ this.languages.join(', ') }}</p> --}}
                                  <p><strong>Released:</strong> {{ this.released }}</p>
                                  <p><strong>IMDb Rating:</strong> {{ this.imdb.rating }}/10</p>
                                  <p><strong>Tomatoes Viewer Rating:</strong> {{ this.tomatoes.viewer.rating }}/5</p>
                                  <p><strong>Rated:</strong> {{ this.rated }}</p>
                                  <p><strong>Awards:</strong> {{ this.awards.wins }} wins, {{ this.awards.nominations }} nominations</p>
                                  <p><strong>Last Updated:</strong> {{ this.lastupdated }}</p>
                              </div>
                          </div>
                      </div>
                  </div>
                  <button id="edit-button" class="btn btn-primary edit-btn" value="{{this._id}}">Edit</button>
                  <form id="deleteForm">
                    <button type="submit" id="delete-button" class="btn btn-danger delete-btn" value="{{this._id}}">Delete</button>
                  </form>
              {{/if}}
            {{/each}}
        </div>
    </div>
</div>

<script>
  async function fetchMovieDetails(movieId) {
    try {
        const token = localStorage.getItem('token'); // Retrieve token from localStorage
        const response = await fetch(`/api/Movies/${movieId}/update`, {
            method: 'GET',
            headers: {
                'Authorization': `Bearer ${token}` // Include token in the Authorization header
            }
        });

        if (response.ok) {
            const movieDetails = await response.json();
        } else {
            console.error('Failed to fetch movie details:', response.statusText);
        }
    } catch (error) {
        console.error('Failed to fetch movie details:', error);
    }
  }
  
  document.addEventListener('DOMContentLoaded', function() {
        const editButton = document.getElementById('edit-button');

        editButton.addEventListener('click', function() {
            const movieId = this.getAttribute('value');
            {{!-- fetchMovieDetails(movieId); --}}
            window.location.href = `/api/Movies/${movieId}/update`;
        });
    });

    document.getElementById('deleteForm').addEventListener('submit', async function(event) {
    event.preventDefault();

    const confirmed = confirm('Are you sure you want to delete this movie?');
    if (confirmed) {
        const id = window.location.href.split('/').pop(); 
        const token = localStorage.getItem('token');

        try {
            const response = await fetch(`/api/movies/${id}`, {
                method: 'DELETE',
                headers: {
                    'Authorization': `Bearer ${token}`
                }
            });
            if (response.ok) {
                document.location.replace('/api/Movies?page=1&perPage=8&title=');
            } else {
                console.error('Failed to delete movie');
            }
        } catch (error) {
            console.error('Error:', error);
        }
    }
});

</script>
